<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Sat Apr 20 04:09:39 PDT 2013
  Author:  oracle
  Purpose: Synchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="MergeBPELProcess"
         targetNamespace="http://xmlns.oracle.com/prePush/MergeCheck/MergeBPELProcess"
         xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:client="http://xmlns.oracle.com/prePush/MergeCheck/MergeBPELProcess"
         xmlns:ora="http://schemas.oracle.com/xpath/extension"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:ns1="http://www.example.org/CheckMerge"
         xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ns3="http://www.example.org/businessSchemas"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:ns2="http://www.example.org/messages"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      PARTNERLINKS                                                      
      List of services participating in this BPEL process               
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <import namespace="http://www.example.org/businessSchemas"
          location="src/UserArray.xsd"
          importType="http://www.w3.org/2001/XMLSchema"/>
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="MergeBPELProcessService"
                 partnerLinkType="ns1:MergeBPELProcess" myRole="CheckMergePT"/>
  </partnerLinks>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable" messageType="ns1:checkMergeRequest"/>
    <!-- Reference to the message that will be returned to the requester-->
    <variable name="outputVariable" messageType="ns1:checkMergeResponse"/>
    <variable name="DenyCommitToMasterBranch_checkMerge_OutputVariable"
              messageType="ns1:checkMergeResponse"/>
  </variables>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">
    <!-- Receive input from requestor. (Note: This maps to operation defined in MergeBPELProcess.wsdl) -->
    <receive name="receiveInput" partnerLink="MergeBPELProcessService"
             portType="ns1:CheckMergePT" operation="checkMerge"
             variable="inputVariable" createInstance="yes"/>
    <scope name="Scope1">
      <variables>
        <variable name="UserCollection" element="ns3:UserCollection">
          <from><literal><UserCollection xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
<user>divjak</user>
<user>kacin</user>
<user>majcn</user>
</UserCollection></literal></from>
        </variable>
        <variable name="UserOK" type="xsd:string">
          <from><literal>NO</literal></from>
        </variable>
        <variable name="BranchOK" type="xsd:string">
          <from><literal/></from>
        </variable>
      </variables>
      <if name="If1">
        <documentation>If branch is master deny. Not allowed.</documentation>
        <condition>$inputVariable.in/ns2:commits/ns3:commits/ns3:branch="master"</condition>
        <sequence name="Sequence3">
          <assign name="DenyMergeToMaster">
            <copy>
              <from><literal>401:DenyCommitToMaster</literal></from>
              <to>$outputVariable.return/ns2:status</to>
            </copy>
          </assign>
        </sequence>
        <else>
          <documentation>Not master. Check databases for valid users and feature branches</documentation>
          <sequence name="Sequence1">
            <flow name="Flow1">
              <sequence name="checkCommit">
                <if name="CheckIfWeNeedToMerge">
                  <documentation>Commiting to develop branch (merge)</documentation>
                  <condition>$inputVariable.in/ns2:commits/ns3:commits/ns3:branch= "develop"</condition>
                  <sequence name="Sequence2"><assign name="MergeToDevelopBranch"
                                                  xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      
   <copy>
                        <from><literal>Develop</literal></from>
                        <to>$BranchOK</to>
                      </copy></assign></sequence>
                  <else>
                    <documentation>Commiting to valid feature branch (normal commit)</documentation>
                    <forEach parallel="no" counterName="ForEach1Counter"
                             name="CheckFeatureBranches">
                      <startCounterValue>1</startCounterValue>
                      <finalCounterValue>3</finalCounterValue>
                      <scope name="Scope2">
                        <variables>
                          <variable name="feature1" type="xsd:string">
                            <from><literal>feature-newLogin</literal></from>
                          </variable>
                          <variable name="feature2" type="xsd:string">
                            <from><literal>feature-FBapi</literal></from>
                          </variable>
                        </variables><sequence name="Sequence5"><assign name="FeatureBranchIsOK"
                                                                                             xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      
   <copy>
                              <from><literal>OK</literal></from>
                              <to>$BranchOK</to>
                            </copy></assign></sequence></scope>
                    </forEach>
                  </else>
                </if>
              </sequence>
              <sequence name="CheckUser">
                <forEach parallel="no" counterName="counter"
                         name="IterateUserArray">
                  <startCounterValue>1</startCounterValue>
                  <finalCounterValue>3</finalCounterValue>
                  <scope name="Scope3">
                    <if name="CheckIfUserExists">
                      <documentation>User Exists</documentation>
                      <condition>$inputVariable.in/ns2:commits/ns3:commits/ns3:user="divjak"</condition><sequence name="Sequence4"><assign name="UserValid"
                                                                                                                                                                                                                                              xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      
   <copy>
                            <from><literal>OK</literal></from>
                            <to>$UserOK</to>
                          </copy></assign></sequence><else>
                        <documentation>User not found</documentation>
                        <empty name="UserInvalid"/>
                      </else>
                    </if>
                  </scope>
                </forEach>
              </sequence>
            </flow><if name="CheckUser"
                       xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <documentation>User is valid</documentation>
      <condition>$UserOK="OK"</condition>
      <sequence name="Sequence2">
         
         <if name="CheckWhichBranch"
             xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <documentation>Valid feature branch</documentation>
      <condition>$BranchOK="OK"</condition>
      <sequence name="Sequence2">
         
         <assign name="CommitToFeatureBranchOK"
                 xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      
   <copy>
         <from><literal>201:CommitNewFeatureOK</literal></from>
         <to>$outputVariable.return/ns2:status</to>
      </copy></assign>
      </sequence>
      <else>
         <documentation source="CheckIfDevel">Maybe develop branch or unknown branch</documentation>
         
      <if name="CheckIfBranchDevelop"
          xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <documentation>Develop branch</documentation>
      <condition>$BranchOK="Develop"</condition>
      <sequence name="Sequence2">
         
         <assign name="MergeToDevelop"
                 xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      
   <copy>
         <from><literal>202:MergeToDevelop</literal></from>
         <to>$outputVariable.return/ns2:status</to>
      </copy></assign>
      </sequence>
      <else>
         <documentation>Unknown branch</documentation>
         
      <sequence name="Sequence6"><assign name="UnkownBranch"
                                         xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      
   <copy>
         <from><literal>403:UnknownBranch</literal></from>
         <to>$outputVariable.return/ns2:status</to>
      </copy></assign></sequence></else>
   </if></else>
   </if>
      </sequence>
      <else>
         <documentation>User is not valid</documentation>
         
      <sequence name="Sequence6"><assign name="DenyInvalidUser"
                                         xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      
   <copy>
         <from><literal>402:DenyInvalidUser</literal></from>
         <to>$outputVariable.return/ns2:status</to>
      </copy></assign></sequence></else>
   </if></sequence>
        </else>
      </if>
    </scope>
    <!-- Generate reply to synchronous request -->
    <reply name="replyOutput" partnerLink="MergeBPELProcessService"
           portType="ns1:CheckMergePT" operation="checkMerge"
           variable="outputVariable"/>
  </sequence>
</process>